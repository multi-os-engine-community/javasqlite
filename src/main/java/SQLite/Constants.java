/* DO NOT EDIT */

package SQLite;

/**
 * Container for SQLite constants.
 * 
 * Usually generated by "native/mkconst.c". For MOE, I pasted in the output of this one-liner:
 * 
 * perl -ne '$_ =~ s/#define\s+(SQLITE\S+)\s+([0-9x]+)/    public static final int $1 = $2;/ && print $_;' /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk/usr/include/sqlite3.h
 */
public final class Constants {
    // Copied from VERSION.
    public static final int drv_minor = 20150419;
    // Generated by the one-liner above.
    public static final int SQLITE_VERSION_NUMBER = 3032003;
    public static final int SQLITE_OK = 0;   /* Successful result */
    public static final int SQLITE_ERROR = 1;   /* Generic error */
    public static final int SQLITE_INTERNAL = 2;   /* Internal logic error in SQLite */
    public static final int SQLITE_PERM = 3;   /* Access permission denied */
    public static final int SQLITE_ABORT = 4;   /* Callback routine requested an abort */
    public static final int SQLITE_BUSY = 5;   /* The database file is locked */
    public static final int SQLITE_LOCKED = 6;   /* A table in the database is locked */
    public static final int SQLITE_NOMEM = 7;   /* A malloc() failed */
    public static final int SQLITE_READONLY = 8;   /* Attempt to write a readonly database */
    public static final int SQLITE_INTERRUPT = 9;   /* Operation terminated by sqlite3_interrupt()*/
    public static final int SQLITE_IOERR = 10;   /* Some kind of disk I/O error occurred */
    public static final int SQLITE_CORRUPT = 11;   /* The database disk image is malformed */
    public static final int SQLITE_NOTFOUND = 12;   /* Unknown opcode in sqlite3_file_control() */
    public static final int SQLITE_FULL = 13;   /* Insertion failed because database is full */
    public static final int SQLITE_CANTOPEN = 14;   /* Unable to open the database file */
    public static final int SQLITE_PROTOCOL = 15;   /* Database lock protocol error */
    public static final int SQLITE_EMPTY = 16;   /* Internal use only */
    public static final int SQLITE_SCHEMA = 17;   /* The database schema changed */
    public static final int SQLITE_TOOBIG = 18;   /* String or BLOB exceeds size limit */
    public static final int SQLITE_CONSTRAINT = 19;   /* Abort due to constraint violation */
    public static final int SQLITE_MISMATCH = 20;   /* Data type mismatch */
    public static final int SQLITE_MISUSE = 21;   /* Library used incorrectly */
    public static final int SQLITE_NOLFS = 22;   /* Uses OS features not supported on host */
    public static final int SQLITE_AUTH = 23;   /* Authorization denied */
    public static final int SQLITE_FORMAT = 24;   /* Not used */
    public static final int SQLITE_RANGE = 25;   /* 2nd parameter to sqlite3_bind out of range */
    public static final int SQLITE_NOTADB = 26;   /* File opened that is not a database file */
    public static final int SQLITE_NOTICE = 27;   /* Notifications from sqlite3_log() */
    public static final int SQLITE_WARNING = 28;   /* Warnings from sqlite3_log() */
    public static final int SQLITE_ROW = 100;  /* sqlite3_step() has another row ready */
    public static final int SQLITE_DONE = 101;  /* sqlite3_step() has finished executing */
    public static final int SQLITE_OPEN_READONLY = 0x00000001;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_READWRITE = 0x00000002;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_CREATE = 0x00000004;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_DELETEONCLOSE = 0x00000008;  /* VFS only */
    public static final int SQLITE_OPEN_EXCLUSIVE = 0x00000010;  /* VFS only */
    public static final int SQLITE_OPEN_AUTOPROXY = 0x00000020;  /* VFS only */
    public static final int SQLITE_OPEN_URI = 0x00000040;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_MEMORY = 0x00000080;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_MAIN_DB = 0x00000100;  /* VFS only */
    public static final int SQLITE_OPEN_TEMP_DB = 0x00000200;  /* VFS only */
    public static final int SQLITE_OPEN_TRANSIENT_DB = 0x00000400;  /* VFS only */
    public static final int SQLITE_OPEN_MAIN_JOURNAL = 0x00000800;  /* VFS only */
    public static final int SQLITE_OPEN_TEMP_JOURNAL = 0x00001000;  /* VFS only */
    public static final int SQLITE_OPEN_SUBJOURNAL = 0x00002000;  /* VFS only */
    public static final int SQLITE_OPEN_MASTER_JOURNAL = 0x00004000;  /* VFS only */
    public static final int SQLITE_OPEN_NOMUTEX = 0x00008000;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_FULLMUTEX = 0x00010000;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_SHAREDCACHE = 0x00020000;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_PRIVATECACHE = 0x00040000;  /* Ok for sqlite3_open_v2() */
    public static final int SQLITE_OPEN_WAL = 0x00080000;  /* VFS only */
    public static final int SQLITE_OPEN_FILEPROTECTION_COMPLETE = 0x00100000;
    public static final int SQLITE_OPEN_FILEPROTECTION_COMPLETEUNLESSOPEN = 0x00200000;
    public static final int SQLITE_OPEN_FILEPROTECTION_COMPLETEUNTILFIRSTUSERAUTHENTICATION = 0x00300000;
    public static final int SQLITE_OPEN_FILEPROTECTION_NONE = 0x00400000;
    public static final int SQLITE_IOCAP_ATOMIC = 0x00000001;
    public static final int SQLITE_IOCAP_ATOMIC512 = 0x00000002;
    public static final int SQLITE_IOCAP_ATOMIC1K = 0x00000004;
    public static final int SQLITE_IOCAP_ATOMIC2K = 0x00000008;
    public static final int SQLITE_IOCAP_ATOMIC4K = 0x00000010;
    public static final int SQLITE_IOCAP_ATOMIC8K = 0x00000020;
    public static final int SQLITE_IOCAP_ATOMIC16K = 0x00000040;
    public static final int SQLITE_IOCAP_ATOMIC32K = 0x00000080;
    public static final int SQLITE_IOCAP_ATOMIC64K = 0x00000100;
    public static final int SQLITE_IOCAP_SAFE_APPEND = 0x00000200;
    public static final int SQLITE_IOCAP_SEQUENTIAL = 0x00000400;
    public static final int SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 0x00000800;
    public static final int SQLITE_IOCAP_POWERSAFE_OVERWRITE = 0x00001000;
    public static final int SQLITE_IOCAP_IMMUTABLE = 0x00002000;
    public static final int SQLITE_IOCAP_BATCH_ATOMIC = 0x00004000;
    public static final int SQLITE_LOCK_NONE = 0;
    public static final int SQLITE_LOCK_SHARED = 1;
    public static final int SQLITE_LOCK_RESERVED = 2;
    public static final int SQLITE_LOCK_PENDING = 3;
    public static final int SQLITE_LOCK_EXCLUSIVE = 4;
    public static final int SQLITE_SYNC_NORMAL = 0x00002;
    public static final int SQLITE_SYNC_FULL = 0x00003;
    public static final int SQLITE_SYNC_DATAONLY = 0x00010;
    public static final int SQLITE_FCNTL_LOCKSTATE = 1;
    public static final int SQLITE_FCNTL_GET_LOCKPROXYFILE = 2;
    public static final int SQLITE_FCNTL_SET_LOCKPROXYFILE = 3;
    public static final int SQLITE_FCNTL_LAST_ERRNO = 4;
    public static final int SQLITE_FCNTL_SIZE_HINT = 5;
    public static final int SQLITE_FCNTL_CHUNK_SIZE = 6;
    public static final int SQLITE_FCNTL_FILE_POINTER = 7;
    public static final int SQLITE_FCNTL_SYNC_OMITTED = 8;
    public static final int SQLITE_FCNTL_WIN32_AV_RETRY = 9;
    public static final int SQLITE_FCNTL_PERSIST_WAL = 10;
    public static final int SQLITE_FCNTL_OVERWRITE = 11;
    public static final int SQLITE_FCNTL_VFSNAME = 12;
    public static final int SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13;
    public static final int SQLITE_FCNTL_PRAGMA = 14;
    public static final int SQLITE_FCNTL_BUSYHANDLER = 15;
    public static final int SQLITE_FCNTL_TEMPFILENAME = 16;
    public static final int SQLITE_FCNTL_MMAP_SIZE = 18;
    public static final int SQLITE_FCNTL_TRACE = 19;
    public static final int SQLITE_FCNTL_HAS_MOVED = 20;
    public static final int SQLITE_FCNTL_SYNC = 21;
    public static final int SQLITE_FCNTL_COMMIT_PHASETWO = 22;
    public static final int SQLITE_FCNTL_WIN32_SET_HANDLE = 23;
    public static final int SQLITE_FCNTL_WAL_BLOCK = 24;
    public static final int SQLITE_FCNTL_ZIPVFS = 25;
    public static final int SQLITE_FCNTL_RBU = 26;
    public static final int SQLITE_FCNTL_VFS_POINTER = 27;
    public static final int SQLITE_FCNTL_JOURNAL_POINTER = 28;
    public static final int SQLITE_FCNTL_WIN32_GET_HANDLE = 29;
    public static final int SQLITE_FCNTL_PDB = 30;
    public static final int SQLITE_FCNTL_BEGIN_ATOMIC_WRITE = 31;
    public static final int SQLITE_FCNTL_COMMIT_ATOMIC_WRITE = 32;
    public static final int SQLITE_FCNTL_ROLLBACK_ATOMIC_WRITE = 33;
    public static final int SQLITE_FCNTL_LOCK_TIMEOUT = 34;
    public static final int SQLITE_FCNTL_DATA_VERSION = 35;
    public static final int SQLITE_FCNTL_SIZE_LIMIT = 36;
    public static final int SQLITE_FCNTL_CKPT_DONE = 37;
    public static final int SQLITE_FCNTL_RESERVE_BYTES = 38;
    public static final int SQLITE_FCNTL_CKPT_START = 39;
    public static final int SQLITE_ACCESS_EXISTS = 0;
    public static final int SQLITE_ACCESS_READWRITE = 1;   /* Used by PRAGMA temp_store_directory */
    public static final int SQLITE_ACCESS_READ = 2;   /* Unused */
    public static final int SQLITE_SHM_UNLOCK = 1;
    public static final int SQLITE_SHM_LOCK = 2;
    public static final int SQLITE_SHM_SHARED = 4;
    public static final int SQLITE_SHM_EXCLUSIVE = 8;
    public static final int SQLITE_SHM_NLOCK = 8;
    public static final int SQLITE_CONFIG_SINGLETHREAD = 1;  /* not supported */
    public static final int SQLITE_CONFIG_MULTITHREAD = 2;  /* nil */
    public static final int SQLITE_CONFIG_SERIALIZED = 3;  /* nil */
    public static final int SQLITE_CONFIG_MALLOC = 4;  /* sqlite3_mem_methods* */
    public static final int SQLITE_CONFIG_GETMALLOC = 5;  /* sqlite3_mem_methods* */
    public static final int SQLITE_CONFIG_SCRATCH = 6;  /* No longer used */
    public static final int SQLITE_CONFIG_PAGECACHE = 7;  /* void*, int sz, int N */
    public static final int SQLITE_CONFIG_HEAP = 8;  /* void*, int nByte, int min */
    public static final int SQLITE_CONFIG_MEMSTATUS = 9;  /* boolean */
    public static final int SQLITE_CONFIG_MUTEX = 10;  /* sqlite3_mutex_methods* */
    public static final int SQLITE_CONFIG_GETMUTEX = 11;  /* sqlite3_mutex_methods* */
    public static final int SQLITE_CONFIG_LOOKASIDE = 13;  /* int int */
    public static final int SQLITE_CONFIG_PCACHE = 14;  /* no-op */
    public static final int SQLITE_CONFIG_GETPCACHE = 15;  /* no-op */
    public static final int SQLITE_CONFIG_LOG = 16;  /* not supported */
    public static final int SQLITE_CONFIG_URI = 17;  /* int */
    public static final int SQLITE_CONFIG_PCACHE2 = 18;  /* sqlite3_pcache_methods2* */
    public static final int SQLITE_CONFIG_GETPCACHE2 = 19;  /* sqlite3_pcache_methods2* */
    public static final int SQLITE_CONFIG_COVERING_INDEX_SCAN = 20;  /* int */
    public static final int SQLITE_CONFIG_SQLLOG = 21;  /* xSqllog, void* */
    public static final int SQLITE_CONFIG_MMAP_SIZE = 22;  /* sqlite3_int64, sqlite3_int64 */
    public static final int SQLITE_CONFIG_WIN32_HEAPSIZE = 23;  /* int nByte */
    public static final int SQLITE_CONFIG_PCACHE_HDRSZ = 24;  /* int *psz */
    public static final int SQLITE_CONFIG_PMASZ = 25;  /* unsigned int szPma */
    public static final int SQLITE_CONFIG_STMTJRNL_SPILL = 26;  /* int nByte */
    public static final int SQLITE_CONFIG_SMALL_MALLOC = 27;  /* boolean */
    public static final int SQLITE_CONFIG_SORTERREF_SIZE = 28;  /* int nByte */
    public static final int SQLITE_CONFIG_MEMDB_MAXSIZE = 29;  /* sqlite3_int64 */
    public static final int SQLITE_DBCONFIG_MAINDBNAME = 1000; /* const char* */
    public static final int SQLITE_DBCONFIG_LOOKASIDE = 1001; /* void* int int */
    public static final int SQLITE_DBCONFIG_ENABLE_FKEY = 1002; /* int int* */
    public static final int SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003; /* int int* */
    public static final int SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER = 1004; /* no op* */
    public static final int SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION = 1005; /* no op */
    public static final int SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE = 1006; /* int int* */
    public static final int SQLITE_DBCONFIG_ENABLE_QPSG = 1007; /* int int* */
    public static final int SQLITE_DBCONFIG_TRIGGER_EQP = 1008; /* int int* */
    public static final int SQLITE_DBCONFIG_RESET_DATABASE = 1009; /* int int* */
    public static final int SQLITE_DBCONFIG_DEFENSIVE = 1010; /* int int* */
    public static final int SQLITE_DBCONFIG_WRITABLE_SCHEMA = 1011; /* int int* */
    public static final int SQLITE_DBCONFIG_LEGACY_ALTER_TABLE = 1012; /* int int* */
    public static final int SQLITE_DBCONFIG_DQS_DML = 1013; /* int int* */
    public static final int SQLITE_DBCONFIG_DQS_DDL = 1014; /* int int* */
    public static final int SQLITE_DBCONFIG_ENABLE_VIEW = 1015; /* int int* */
    public static final int SQLITE_DBCONFIG_LEGACY_FILE_FORMAT = 1016; /* int int* */
    public static final int SQLITE_DBCONFIG_TRUSTED_SCHEMA = 1017; /* int int* */
    public static final int SQLITE_DBCONFIG_MAX = 1017; /* Largest DBCONFIG */
    public static final int SQLITE_DENY = 1;   /* Abort the SQL statement with an error */
    public static final int SQLITE_IGNORE = 2;   /* Don't allow access, but don't generate an error */
    public static final int SQLITE_CREATE_INDEX = 1;   /* Index Name      Table Name      */
    public static final int SQLITE_CREATE_TABLE = 2;   /* Table Name      NULL            */
    public static final int SQLITE_CREATE_TEMP_INDEX = 3;   /* Index Name      Table Name      */
    public static final int SQLITE_CREATE_TEMP_TABLE = 4;   /* Table Name      NULL            */
    public static final int SQLITE_CREATE_TEMP_TRIGGER = 5;   /* Trigger Name    Table Name      */
    public static final int SQLITE_CREATE_TEMP_VIEW = 6;   /* View Name       NULL            */
    public static final int SQLITE_CREATE_TRIGGER = 7;   /* Trigger Name    Table Name      */
    public static final int SQLITE_CREATE_VIEW = 8;   /* View Name       NULL            */
    public static final int SQLITE_DELETE = 9;   /* Table Name      NULL            */
    public static final int SQLITE_DROP_INDEX = 10;   /* Index Name      Table Name      */
    public static final int SQLITE_DROP_TABLE = 11;   /* Table Name      NULL            */
    public static final int SQLITE_DROP_TEMP_INDEX = 12;   /* Index Name      Table Name      */
    public static final int SQLITE_DROP_TEMP_TABLE = 13;   /* Table Name      NULL            */
    public static final int SQLITE_DROP_TEMP_TRIGGER = 14;   /* Trigger Name    Table Name      */
    public static final int SQLITE_DROP_TEMP_VIEW = 15;   /* View Name       NULL            */
    public static final int SQLITE_DROP_TRIGGER = 16;   /* Trigger Name    Table Name      */
    public static final int SQLITE_DROP_VIEW = 17;   /* View Name       NULL            */
    public static final int SQLITE_INSERT = 18;   /* Table Name      NULL            */
    public static final int SQLITE_PRAGMA = 19;   /* Pragma Name     1st arg or NULL */
    public static final int SQLITE_READ = 20;   /* Table Name      Column Name     */
    public static final int SQLITE_SELECT = 21;   /* NULL            NULL            */
    public static final int SQLITE_TRANSACTION = 22;   /* Operation       NULL            */
    public static final int SQLITE_UPDATE = 23;   /* Table Name      Column Name     */
    public static final int SQLITE_ATTACH = 24;   /* Filename        NULL            */
    public static final int SQLITE_DETACH = 25;   /* Database Name   NULL            */
    public static final int SQLITE_ALTER_TABLE = 26;   /* Database Name   Table Name      */
    public static final int SQLITE_REINDEX = 27;   /* Index Name      NULL            */
    public static final int SQLITE_ANALYZE = 28;   /* Table Name      NULL            */
    public static final int SQLITE_CREATE_VTABLE = 29;   /* Table Name      Module Name     */
    public static final int SQLITE_DROP_VTABLE = 30;   /* Table Name      Module Name     */
    public static final int SQLITE_FUNCTION = 31;   /* NULL            Function Name   */
    public static final int SQLITE_SAVEPOINT = 32;   /* Operation       Savepoint Name  */
    public static final int SQLITE_COPY = 0;   /* No longer used */
    public static final int SQLITE_RECURSIVE = 33;   /* NULL            NULL            */
    public static final int SQLITE_TRACE_STMT = 0x01;
    public static final int SQLITE_TRACE_PROFILE = 0x02;
    public static final int SQLITE_TRACE_ROW = 0x04;
    public static final int SQLITE_TRACE_CLOSE = 0x08;
    public static final int SQLITE_LIMIT_LENGTH = 0;
    public static final int SQLITE_LIMIT_SQL_LENGTH = 1;
    public static final int SQLITE_LIMIT_COLUMN = 2;
    public static final int SQLITE_LIMIT_EXPR_DEPTH = 3;
    public static final int SQLITE_LIMIT_COMPOUND_SELECT = 4;
    public static final int SQLITE_LIMIT_VDBE_OP = 5;
    public static final int SQLITE_LIMIT_FUNCTION_ARG = 6;
    public static final int SQLITE_LIMIT_ATTACHED = 7;
    public static final int SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;
    public static final int SQLITE_LIMIT_VARIABLE_NUMBER = 9;
    public static final int SQLITE_LIMIT_TRIGGER_DEPTH = 10;
    public static final int SQLITE_LIMIT_WORKER_THREADS = 11;
    public static final int SQLITE_PREPARE_PERSISTENT = 0x01;
    public static final int SQLITE_PREPARE_NORMALIZE = 0x02;
    public static final int SQLITE_PREPARE_NO_VTAB = 0x04;
    public static final int SQLITE_INTEGER = 1;
    public static final int SQLITE_FLOAT = 2;
    public static final int SQLITE_BLOB = 4;
    public static final int SQLITE_NULL = 5;
    public static final int SQLITE3_TEXT = 3;
    public static final int SQLITE_UTF8 = 1;    /* IMP: R-37514-35566 */
    public static final int SQLITE_UTF16LE = 2;    /* IMP: R-03371-37637 */
    public static final int SQLITE_UTF16BE = 3;    /* IMP: R-51971-34154 */
    public static final int SQLITE_UTF16 = 4;    /* Use native byte order */
    public static final int SQLITE_ANY = 5;    /* Deprecated */
    public static final int SQLITE_UTF16_ALIGNED = 8;    /* sqlite3_create_collation only */
    public static final int SQLITE_DETERMINISTIC = 0x000000800;
    public static final int SQLITE_DIRECTONLY = 0x000080000;
    public static final int SQLITE_SUBTYPE = 0x000100000;
    public static final int SQLITE_INNOCUOUS = 0x000200000;
    public static final int SQLITE_INDEX_SCAN_UNIQUE = 1;     /* Scan visits at most 1 row */
    public static final int SQLITE_INDEX_CONSTRAINT_EQ = 2;
    public static final int SQLITE_INDEX_CONSTRAINT_GT = 4;
    public static final int SQLITE_INDEX_CONSTRAINT_LE = 8;
    public static final int SQLITE_INDEX_CONSTRAINT_LT = 16;
    public static final int SQLITE_INDEX_CONSTRAINT_GE = 32;
    public static final int SQLITE_INDEX_CONSTRAINT_MATCH = 64;
    public static final int SQLITE_INDEX_CONSTRAINT_LIKE = 65;
    public static final int SQLITE_INDEX_CONSTRAINT_GLOB = 66;
    public static final int SQLITE_INDEX_CONSTRAINT_REGEXP = 67;
    public static final int SQLITE_INDEX_CONSTRAINT_NE = 68;
    public static final int SQLITE_INDEX_CONSTRAINT_ISNOT = 69;
    public static final int SQLITE_INDEX_CONSTRAINT_ISNOTNULL = 70;
    public static final int SQLITE_INDEX_CONSTRAINT_ISNULL = 71;
    public static final int SQLITE_INDEX_CONSTRAINT_IS = 72;
    public static final int SQLITE_INDEX_CONSTRAINT_FUNCTION = 150;
    public static final int SQLITE_MUTEX_FAST = 0;
    public static final int SQLITE_MUTEX_RECURSIVE = 1;
    public static final int SQLITE_MUTEX_STATIC_MASTER = 2;
    public static final int SQLITE_MUTEX_STATIC_MEM = 3;  /* sqlite3_malloc() */
    public static final int SQLITE_MUTEX_STATIC_MEM2 = 4;  /* NOT USED */
    public static final int SQLITE_MUTEX_STATIC_OPEN = 4;  /* sqlite3BtreeOpen() */
    public static final int SQLITE_MUTEX_STATIC_PRNG = 5;  /* sqlite3_randomness() */
    public static final int SQLITE_MUTEX_STATIC_LRU = 6;  /* lru page list */
    public static final int SQLITE_MUTEX_STATIC_LRU2 = 7;  /* NOT USED */
    public static final int SQLITE_MUTEX_STATIC_PMEM = 7;  /* sqlite3PageMalloc() */
    public static final int SQLITE_MUTEX_STATIC_APP1 = 8;  /* For use by application */
    public static final int SQLITE_MUTEX_STATIC_APP2 = 9;  /* For use by application */
    public static final int SQLITE_MUTEX_STATIC_APP3 = 10;  /* For use by application */
    public static final int SQLITE_MUTEX_STATIC_VFS1 = 11;  /* For use by built-in VFS */
    public static final int SQLITE_MUTEX_STATIC_VFS2 = 12;  /* For use by extension VFS */
    public static final int SQLITE_MUTEX_STATIC_VFS3 = 13;  /* For use by application VFS */
    public static final int SQLITE_TESTCTRL_FIRST = 5;
    public static final int SQLITE_TESTCTRL_PRNG_SAVE = 5;
    public static final int SQLITE_TESTCTRL_PRNG_RESTORE = 6;
    public static final int SQLITE_TESTCTRL_PRNG_RESET = 7;  /* NOT USED */
    public static final int SQLITE_TESTCTRL_BITVEC_TEST = 8;
    public static final int SQLITE_TESTCTRL_FAULT_INSTALL = 9;
    public static final int SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10;
    public static final int SQLITE_TESTCTRL_PENDING_BYTE = 11;
    public static final int SQLITE_TESTCTRL_ASSERT = 12;
    public static final int SQLITE_TESTCTRL_ALWAYS = 13;
    public static final int SQLITE_TESTCTRL_RESERVE = 14;  /* NOT USED */
    public static final int SQLITE_TESTCTRL_OPTIMIZATIONS = 15;
    public static final int SQLITE_TESTCTRL_ISKEYWORD = 16;  /* NOT USED */
    public static final int SQLITE_TESTCTRL_SCRATCHMALLOC = 17;  /* NOT USED */
    public static final int SQLITE_TESTCTRL_INTERNAL_FUNCTIONS = 17;
    public static final int SQLITE_TESTCTRL_LOCALTIME_FAULT = 18;
    public static final int SQLITE_TESTCTRL_EXPLAIN_STMT = 19;  /* NOT USED */
    public static final int SQLITE_TESTCTRL_ONCE_RESET_THRESHOLD = 19;
    public static final int SQLITE_TESTCTRL_NEVER_CORRUPT = 20;
    public static final int SQLITE_TESTCTRL_VDBE_COVERAGE = 21;
    public static final int SQLITE_TESTCTRL_BYTEORDER = 22;
    public static final int SQLITE_TESTCTRL_ISINIT = 23;
    public static final int SQLITE_TESTCTRL_SORTER_MMAP = 24;
    public static final int SQLITE_TESTCTRL_IMPOSTER = 25;
    public static final int SQLITE_TESTCTRL_PARSER_COVERAGE = 26;
    public static final int SQLITE_TESTCTRL_RESULT_INTREAL = 27;
    public static final int SQLITE_TESTCTRL_PRNG_SEED = 28;
    public static final int SQLITE_TESTCTRL_EXTRA_SCHEMA_CHECKS = 29;
    public static final int SQLITE_TESTCTRL_LAST = 29;  /* Largest TESTCTRL */
    public static final int SQLITE_STATUS_MEMORY_USED = 0;
    public static final int SQLITE_STATUS_PAGECACHE_USED = 1;
    public static final int SQLITE_STATUS_PAGECACHE_OVERFLOW = 2;
    public static final int SQLITE_STATUS_SCRATCH_USED = 3;  /* NOT USED */
    public static final int SQLITE_STATUS_SCRATCH_OVERFLOW = 4;  /* NOT USED */
    public static final int SQLITE_STATUS_MALLOC_SIZE = 5;
    public static final int SQLITE_STATUS_PARSER_STACK = 6;
    public static final int SQLITE_STATUS_PAGECACHE_SIZE = 7;
    public static final int SQLITE_STATUS_SCRATCH_SIZE = 8;  /* NOT USED */
    public static final int SQLITE_STATUS_MALLOC_COUNT = 9;
    public static final int SQLITE_DBSTATUS_LOOKASIDE_USED = 0;
    public static final int SQLITE_DBSTATUS_CACHE_USED = 1;
    public static final int SQLITE_DBSTATUS_SCHEMA_USED = 2;
    public static final int SQLITE_DBSTATUS_STMT_USED = 3;
    public static final int SQLITE_DBSTATUS_LOOKASIDE_HIT = 4;
    public static final int SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5;
    public static final int SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6;
    public static final int SQLITE_DBSTATUS_CACHE_HIT = 7;
    public static final int SQLITE_DBSTATUS_CACHE_MISS = 8;
    public static final int SQLITE_DBSTATUS_CACHE_WRITE = 9;
    public static final int SQLITE_DBSTATUS_DEFERRED_FKS = 10;
    public static final int SQLITE_DBSTATUS_CACHE_USED_SHARED = 11;
    public static final int SQLITE_DBSTATUS_CACHE_SPILL = 12;
    public static final int SQLITE_DBSTATUS_MAX = 12;   /* Largest defined DBSTATUS */
    public static final int SQLITE_STMTSTATUS_FULLSCAN_STEP = 1;
    public static final int SQLITE_STMTSTATUS_SORT = 2;
    public static final int SQLITE_STMTSTATUS_AUTOINDEX = 3;
    public static final int SQLITE_STMTSTATUS_VM_STEP = 4;
    public static final int SQLITE_STMTSTATUS_REPREPARE = 5;
    public static final int SQLITE_STMTSTATUS_RUN = 6;
    public static final int SQLITE_STMTSTATUS_MEMUSED = 99;
    public static final int SQLITE_CHECKPOINT_PASSIVE = 0;  /* Do as much as possible w/o blocking */
    public static final int SQLITE_CHECKPOINT_FULL = 1;  /* Wait for writers, then checkpoint */
    public static final int SQLITE_CHECKPOINT_RESTART = 2;  /* Like FULL but wait for for readers */
    public static final int SQLITE_CHECKPOINT_TRUNCATE = 3;  /* Like RESTART but also truncate WAL */
    public static final int SQLITE_VTAB_CONSTRAINT_SUPPORT = 1;
    public static final int SQLITE_VTAB_INNOCUOUS = 2;
    public static final int SQLITE_VTAB_DIRECTONLY = 3;
    public static final int SQLITE_ROLLBACK = 1;
    /*     public static final int SQLITE_IGNORE = 2; // Also used by sqlite3_authorizer() callback */
    public static final int SQLITE_FAIL = 3;
    /*     public static final int SQLITE_ABORT = 4;  // Also an error code */
    public static final int SQLITE_REPLACE = 5;
    public static final int SQLITE_SCANSTAT_NLOOP = 0;
    public static final int SQLITE_SCANSTAT_NVISIT = 1;
    public static final int SQLITE_SCANSTAT_EST = 2;
    public static final int SQLITE_SCANSTAT_NAME = 3;
    public static final int SQLITE_SCANSTAT_EXPLAIN = 4;
    public static final int SQLITE_SCANSTAT_SELECTID = 5;
    public static final int SQLITE_SERIALIZE_NOCOPY = 0x001;   /* Do no memory allocations */
    public static final int SQLITE_DESERIALIZE_FREEONCLOSE = 1; /* Call sqlite3_free() on close */
    public static final int SQLITE_DESERIALIZE_RESIZEABLE = 2; /* Resize using sqlite3_realloc64() */
    public static final int SQLITE_DESERIALIZE_READONLY = 4; /* Database is read-only */
}
